{"ast":null,"code":"var _jsxFileName = \"/Users/jyp/Documents/\\u110C\\u1161\\u1105\\u116D/github/reactstudy/src/Average.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Average = () => {\n  _s();\n\n  const [list, setList] = useState([]);\n  const [number, setNumber] = useState('');\n\n  const onChange = e => {\n    setNumber(e.target.value);\n  };\n\n  const onInsert = () => {\n    const nextList = list.concat(parseInt(number));\n    setList(nextList);\n    setNumber('');\n  };\n\n  const getAverage = numbers => {\n    console.log(\"평균값 계산중1\");\n    if (numbers.length === 0) return 0;\n    const sum = numbers.reduce((a, b) => a + b);\n    console.log(\"평균값 계산중2\");\n    return sum / numbers.length;\n  };\n\n  const test = () => {\n    console.log(\"test\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      value: number,\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onInsert,\n      children: \"\\uB4F1\\uB85D\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: list.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"\\uD3C9\\uADE0\\uAC12 : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), getAverage(list)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"test\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), \" : \", test()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Average, \"D1eWpSwntBec2phFPpLzkwiNvhs=\");\n\n_c = Average;\nexport default Average;\n\nvar _c;\n\n$RefreshReg$(_c, \"Average\");","map":{"version":3,"sources":["/Users/jyp/Documents/자료/github/reactstudy/src/Average.jsx"],"names":["React","useState","Average","list","setList","number","setNumber","onChange","e","target","value","onInsert","nextList","concat","parseInt","getAverage","numbers","console","log","length","sum","reduce","a","b","test","map","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEI,MAAF,EAAUC,SAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;;AAEA,QAAMM,QAAQ,GAAGC,CAAC,IAAI;AAClBF,IAAAA,SAAS,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACnB,UAAMC,QAAQ,GAAGT,IAAI,CAACU,MAAL,CAAYC,QAAQ,CAACT,MAAD,CAApB,CAAjB;AACAD,IAAAA,OAAO,CAACQ,QAAD,CAAP;AACAN,IAAAA,SAAS,CAAC,EAAD,CAAT;AACH,GAJD;;AAMA,QAAMS,UAAU,GAAGC,OAAO,IAAI;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,QAAGF,OAAO,CAACG,MAAR,KAAmB,CAAtB,EAAyB,OAAO,CAAP;AACzB,UAAMC,GAAG,GAAGJ,OAAO,CAACK,MAAR,CAAe,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA7B,CAAZ;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,WAAOE,GAAG,GAAGJ,OAAO,CAACG,MAArB;AACH,GAND;;AAQA,QAAMK,IAAI,GAAG,MAAM;AACfP,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI;AAAO,MAAA,KAAK,EAAEb,MAAd;AAAsB,MAAA,QAAQ,EAAEE;AAAhC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAEI,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAEQR,IAAI,CAACsB,GAAL,CAAS,CAACf,KAAD,EAAQgB,KAAR,kBACL;AAAA,kBAAiBhB;AAAjB,SAASgB,KAAT;AAAA;AAAA;AAAA;AAAA,cADJ;AAFR;AAAA;AAAA;AAAA;AAAA,YAHJ,eAUI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EACkBX,UAAU,CAACZ,IAAD,CAD5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAaI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,SACmBqB,IAAI,EADvB;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA,kBADJ;AAmBH,CA7CD;;GAAMtB,O;;KAAAA,O;AA+CN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Average = () => {\n    const [ list, setList ] = useState([]);\n    const [ number, setNumber ] = useState('');\n\n    const onChange = e => {\n        setNumber(e.target.value);\n    }\n\n    const onInsert = () => {\n        const nextList = list.concat(parseInt(number));\n        setList(nextList);\n        setNumber('');\n    }\n\n    const getAverage = numbers => {\n        console.log(\"평균값 계산중1\");\n        if(numbers.length === 0) return 0;\n        const sum = numbers.reduce((a, b) => a + b);\n        console.log(\"평균값 계산중2\");\n        return sum / numbers.length;\n    }\n    \n    const test = () => {\n        console.log(\"test\")\n    }\n\n    return (\n        <>\n            <input value={number} onChange={onChange} />\n            <button onClick={onInsert}>등록</button>\n            <ul>\n                {\n                    list.map((value, index) => (\n                        <li key={index}>{value}</li>\n                    ))\n                }\n            </ul>\n            <div>\n                <b>평균값 : </b>{getAverage(list)}\n            </div>\n            <div>\n                <b>test</b> : {test()}\n            </div>\n        </>\n    )\n}\n\nexport default Average;"]},"metadata":{},"sourceType":"module"}